spring.application.name=google_hackathon
spring.datasource.url=jdbc:postgresql://google/postgres?cloudSqlInstance=nomadic-bison-459812-a8:us-central1:google-hackathon-dist3&socketFactory=com.google.cloud.sql.postgres.SocketFactory

spring.datasource.username=postgres
spring.datasource.password=morimoridist
spring.datasource.driver-class-name=org.postgresql.Driver

#  auth スキーマのテーブルを参照することを明示
spring.jpa.properties.hibernate.default_schema=auth

# Hibernate 方言（PostgreSQL用）
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JPAのテーブル作成ポリシー（開発中は update、本番は none）
# spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

server.port=${PORT:8080}

# ========================================
# 【追加】Google Cloud AI設定
# ========================================
# Google Cloud プロジェクトID（ExcelAnalyzerService用）
google.cloud.project.id=nomadic-bison-459812-a8
logging.level.com.example.google.google_hackathon.service.ExcelAnalyzerService=INFO

# ========================================
# 【追加】Google OAuth2 クライアント設定
# ========================================
spring.security.oauth2.client.registration.google.client-id=14467698004-st2mnmp5t5ebt3nbj1kkgvamj7f5jps5.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email,https://www.googleapis.com/auth/calendar.events
spring.security.oauth2.client.registration.google.redirect-uri=https://my-image-14467698004.asia-northeast1.run.app/oauth2/callback

# logging.level.org.springframework.security=DEBUG
# logging.level.org.hibernate.SQL=DEBUG

# ここから下は後でけします　小山
# SQLにバインドされるパラメータを表示
logging.level.org.hibernate.type.descriptor.sql=TRACE     
# JDBCテンプレートの操作を表示
logging.level.org.springframework.jdbc.core=DEBUG        
# トランザクション関連のログを表示
logging.level.org.springframework.transaction=DEBUG       
# JWTフィルターなど、各HTTPリクエスト処理のログ
logging.level.org.springframework.web.filter.OncePerRequestFilter=DEBUG 
# あなたのアプリケーションのパッケージ全体のログ
logging.level.com.example.google.google_hackathon=DEBUG 


# Spring MVCが例外を解決する際に、より詳細なログを出力する
spring.mvc.log-resolved-exception=true

# Spring Web関連のロギングレベルをDEBUGに設定
# これにより、リクエスト処理やバリデーションに関する詳細な情報がログに出力されるようになります。
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.web.servlet=DEBUG
logging.level.org.springframework.validation=DEBUG
logging.level.org.hibernate.validator=DEBUG # Hibernate Validator (JPAのバリデーション) のログ
logging.level.org.springframework.dao=DEBUG # データベースアクセスエラーのログ
